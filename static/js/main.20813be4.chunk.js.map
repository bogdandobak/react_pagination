{"version":3,"sources":["components/Pagination/Pagination.jsx","App.js","index.js"],"names":["Pagination","state","selected","props","page","handleSelected","event","target","setState","textContent","handlePrevious","prevState","handleNext","end","this","total","perPage","withInfo","totalPages","Math","ceil","pages","Array","from","_","index","aria-label","className","classNames","disabled","href","onClick","map","key","length","React","Component","defaultProps","options","App","onPerPageChange","name","value","onChange","item","ReactDOM","render","document","getElementById"],"mappings":"2QAKaA,EAAb,4MACEC,MAAQ,CACNC,SAAU,EAAKC,MAAMC,MAFzB,EAKEC,eAAiB,SAACC,GAAW,IACnBC,EAAWD,EAAXC,OAER,EAAKC,SAAS,CACZN,UAAWK,EAAOE,eATxB,EAaEC,eAAiB,WACf,EAAKF,UAAS,SAAAG,GAAS,MAAK,CAC1BT,SAAUS,EAAUT,SAAW,OAfrC,EAmBEU,WAAa,WACX,EAAKJ,UAAS,SAAAG,GAAS,MAAK,CAC1BT,SAAUS,EAAUT,SAAW,OArBrC,4CAyBE,WAAU,IAQuBW,EARxB,SAC8BC,KAAKX,MAAlCY,EADD,EACCA,MAAOC,EADR,EACQA,QAASC,EADjB,EACiBA,SAChBf,EAAaY,KAAKb,MAAlBC,SACFgB,EAAaC,KAAKC,KAAKL,EAAQC,GAC/BK,EAAQC,MAAMC,KAAKD,MAAMJ,IAAa,SAACM,EAAGC,GAAJ,OAAcA,EAAQ,KAQlE,OACE,6BACE,yBAAKC,aAAW,2BACd,wBAAIC,UAAU,cACZ,wBAAIA,UAAU,aACZ,uBACEA,UAAWC,IAAW,YAAa,CACjCC,SAAU3B,EAAW,IAEvB4B,KAAI,WAAM5B,GACV6B,QAASjB,KAAKJ,gBALhB,aAUDW,EAAMW,KAAI,SAAA5B,GAAI,OACb,wBAAIuB,UAAU,YAAYM,IAAK7B,GAC7B,uBACEuB,UAAWC,IAAW,YAAa,CACjC1B,SAAUA,IAAaE,IAEzB0B,KAAI,WAAM1B,GACV2B,QAAS,EAAK1B,gBAEbD,OAKP,wBAAIuB,UAAU,aACZ,uBACEA,UAAWC,IAAW,YAAa,CACjCC,SAAU3B,IAAamB,EAAMA,EAAMa,OAAS,KAE9CJ,KAAI,WAAM5B,GACV6B,QAASjB,KAAKF,YALhB,YAlCqBC,EAFH,GAGnBX,GAJ0B,GAILA,GAAYW,GA+ClC,6BACGI,SAlFf,GAAgCkB,IAAMC,WAkGtCpC,EAAWqC,aAAe,CACxBrB,QAAS,EACTZ,KAAM,EACNa,SAAU,ICtGZ,IAAMqB,EAAU,CAAC,EAAG,EAAG,GAAI,IA8CZC,E,4MA3CbtC,MAAQ,CACNe,QAAS,G,EAGXwB,gBAAkB,SAAClC,GAAW,IAAD,EACHA,EAAMC,OAAtBkC,EADmB,EACnBA,KAAMC,EADa,EACbA,MAEd,EAAKlC,SAAL,eACGiC,EAAOC,K,4CAIZ,WAAU,IACA1B,EAAYF,KAAKb,MAAjBe,QAER,OACE,yBAAKW,UAAU,OACb,0CACA,kBAAC,EAAD,CACEZ,MAAO,GACPC,QAASA,EACTZ,KAAM,EACNa,SAAS,+BAEX,4BACEwB,KAAK,UACLC,MAAO1B,EACP2B,SAAU7B,KAAK0B,iBAEdF,EAAQN,KAAI,SAAAY,GAAI,OACf,4BACEX,IAAKW,EACLF,MAAOE,GAENA,Y,GAnCGT,IAAMC,WCFxBS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.20813be4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.css';\nimport classNames from 'classnames';\n\nexport class Pagination extends React.Component {\n  state = {\n    selected: this.props.page,\n  }\n\n  handleSelected = (event) => {\n    const { target } = event;\n\n    this.setState({\n      selected: +target.textContent,\n    });\n  }\n\n  handlePrevious = () => {\n    this.setState(prevState => ({\n      selected: prevState.selected - 1,\n    }));\n  }\n\n  handleNext = () => {\n    this.setState(prevState => ({\n      selected: prevState.selected + 1,\n    }));\n  }\n\n  render() {\n    const { total, perPage, withInfo } = this.props;\n    const { selected } = this.state;\n    const totalPages = Math.ceil(total / perPage);\n    const pages = Array.from(Array(totalPages), (_, index) => index + 1);\n    const startAddAdditionalInfoFrom = 6;\n    const addAdditionalInfoTo = 10;\n\n    function shouldShowInfo(start, end) {\n      return selected >= start && selected <= end;\n    }\n\n    return (\n      <div>\n        <nav aria-label=\"Page navigation example\">\n          <ul className=\"pagination\">\n            <li className=\"page-item\">\n              <a\n                className={classNames('page-link', {\n                  disabled: selected < 2,\n                })}\n                href={`#${selected}`}\n                onClick={this.handlePrevious}\n              >\n                Previous\n              </a>\n            </li>\n            {pages.map(page => (\n              <li className=\"page-item\" key={page}>\n                <a\n                  className={classNames('page-link', {\n                    selected: selected === page,\n                  })}\n                  href={`#${page}`}\n                  onClick={this.handleSelected}\n                >\n                  {page}\n                </a>\n              </li>\n            ))}\n\n            <li className=\"page-item\">\n              <a\n                className={classNames('page-link', {\n                  disabled: selected === pages[pages.length - 1],\n                })}\n                href={`#${selected}`}\n                onClick={this.handleNext}\n              >\n                Next\n              </a>\n            </li>\n          </ul>\n        </nav>\n        {shouldShowInfo(startAddAdditionalInfoFrom, addAdditionalInfoTo)\n          && (\n            <div>\n              {withInfo}\n            </div>\n          )\n      }\n      </div>\n    );\n  }\n}\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number,\n  page: PropTypes.number,\n  withInfo: PropTypes.string,\n};\n\nPagination.defaultProps = {\n  perPage: 5,\n  page: 1,\n  withInfo: '',\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nconst options = [3, 5, 10, 20];\n\nclass App extends React.Component {\n  state = {\n    perPage: 5,\n  }\n\n  onPerPageChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { perPage } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Pagination</h1>\n        <Pagination\n          total={42}\n          perPage={perPage}\n          page={1}\n          withInfo=\"Hello, I`m additional info\"\n        />\n        <select\n          name=\"perPage\"\n          value={perPage}\n          onChange={this.onPerPageChange}\n        >\n          {options.map(item => (\n            <option\n              key={item}\n              value={item}\n            >\n              {item}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}